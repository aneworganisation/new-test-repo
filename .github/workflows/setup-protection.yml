name: Setup Branch Protection & Naming

on:
  workflow_dispatch:

jobs:
  protect:
    runs-on: ubuntu-latest
    env:
      OWNER: ${{ github.repository_owner }}
      REPO: ${{ github.event.repository.name }}
      ADMIN_TOKEN: ${{ secrets.REPO_ADMIN_TOKEN }}

    steps:
      - name: Preflight — verify PAT & repo access
        env:
          GH_TOKEN: ${{ env.ADMIN_TOKEN }}
        run: |
          test -n "$GH_TOKEN" || { echo "❌ Missing REPO_ADMIN_TOKEN"; exit 1; }
          gh api /user >/dev/null || { echo "❌ PAT invalid or expired"; exit 1; }
          gh api "/repos/$OWNER/$REPO" >/dev/null || {
            echo "❌ PAT cannot access $OWNER/$REPO — check scope, repo access, and SSO auth."
            exit 1
          }
          echo "✅ PAT is valid and can access $OWNER/$REPO"

      - name: Detect default branch
        id: def
        env:
          GH_TOKEN: ${{ env.ADMIN_TOKEN }}
        run: |
          DEF=$(gh api "/repos/$OWNER/$REPO" --jq .default_branch)
          echo "default_branch=$DEF" >> "$GITHUB_OUTPUT"
          echo "ℹ️ Default branch is: $DEF"

      - name: Protect default branch
        env:
          GH_TOKEN: ${{ env.ADMIN_TOKEN }}
        run: |
          DEF="${{ steps.def.outputs.default_branch }}"
          cat > body.json <<'JSON'
          {
            "required_status_checks": {
              "strict": true,
              "contexts": ["build","unit-tests","lint","sast","coverage"]
            },
            "enforce_admins": true,
            "required_pull_request_reviews": {
              "dismiss_stale_reviews": true,
              "require_code_owner_reviews": true,
              "required_approving_review_count": 2
            },
            "restrictions": null,
            "allow_force_pushes": false,
            "allow_deletions": false,
            "required_linear_history": false,
            "block_creations": false,
            "required_conversation_resolution": true,
            "lock_branch": false,
            "allow_fork_syncing": false
          }
          JSON
          gh api \
            --method PUT \
            -H "Accept: application/vnd.github+json" \
            "/repos/$OWNER/$REPO/branches/$DEF/protection" \
            --input body.json

      - name: Enable required signed commits (best effort)
        env:
          GH_TOKEN: ${{ env.ADMIN_TOKEN }}
        run: |
          DEF="${{ steps.def.outputs.default_branch }}"
          gh api -X POST -H "Accept: application/vnd.github+json" \
            "/repos/$OWNER/$REPO/branches/$DEF/protection/required_signatures" \
            || echo "ℹ️ Signed commits may be restricted — skipped."

      - name: Protect all existing release/* branches
        env:
          GH_TOKEN: ${{ env.ADMIN_TOKEN }}
        run: |
          mapfile -t RELEASE_BRANCHES < <(gh api "/repos/$OWNER/$REPO/branches?per_page=100" --jq '.[].name | select(test("^release/"))')
          if [ ${#RELEASE_BRANCHES[@]} -eq 0 ]; then
            echo "ℹ️ No release/* branches found — skipping."
            exit 0
          fi

          for BRANCH in "${RELEASE_BRANCHES[@]}"; do
            echo "🔒 Protecting branch: $BRANCH"
            cat > body.json <<'JSON'
            {
              "required_status_checks": {
                "strict": true,
                "contexts": ["build","unit-tests","lint","sast","coverage"]
              },
              "enforce_admins": true,
              "required_pull_request_reviews": {
                "dismiss_stale_reviews": true,
                "require_code_owner_reviews": true,
                "required_approving_review_count": 1
              },
              "restrictions": null,
              "allow_force_pushes": false,
              "allow_deletions": false,
              "required_linear_history": false,
              "block_creations": false,
              "required_conversation_resolution": true,
              "lock_branch": false,
              "allow_fork_syncing": false
            }
            JSON
            gh api \
              --method PUT \
              -H "Accept: application/vnd.github+json" \
              "/repos/$OWNER/$REPO/branches/$BRANCH/protection" \
              --input body.json
          done

      - name: Protect tags v*
        env:
          GH_TOKEN: ${{ env.ADMIN_TOKEN }}
        run: |
          gh api -X POST -H "Accept: application/vnd.github+json" \
            "/repos/$OWNER/$REPO/tags/protection" \
            -f pattern='v*' || echo "ℹ️ Tag protection may already exist."

      - name: Generate branch-name enforcement workflow (local only)
        run: |
          set -euo pipefail
          echo "📁 Working directory: $(pwd)"
          mkdir -p .github/workflows

          cat <<'WF' > .github/workflows/branch-name-check.yml
          name: Branch name check
          on:
            create:
            push:
              branches-ignore:
                - main
                - 'release/*'

          jobs:
            enforce:
              runs-on: ubuntu-latest
              steps:
                - name: Validate branch name
                  run: |
                    BRANCH="${GITHUB_REF_NAME}"
                    PATTERN='^(feat|fix|hotfix|chore|refactor|docs|test|perf|build|ci|revert)\/[a-z0-9._-]+$'
                    if [[ "$BRANCH" =~ ^(main|release\/.+)$ ]]; then
                      echo "Skipping enforcement for $BRANCH"
                      exit 0
                    fi
                    if [[ "$BRANCH" =~ $PATTERN ]]; then
                      echo "✅ Branch name OK: $BRANCH"
                    else
                      echo "❌ Branch name '$BRANCH' does not match: $PATTERN" >&2
                      echo "Examples:"
                      echo "  feat/add-login"
                      echo "  fix/null-pointer"
                      echo "  hotfix/rollback-v123"
                      echo "  docs/readme-update"
                      exit 1
                    fi
          WF

          echo "✅ Created .github/workflows/branch-name-check.yml (not committed)"
